// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${ANDROID_GRADLE_PLUGIN_VERSION}"
        classpath "de.undercouch:gradle-download-task:${GRADLE_DOWNLOAD_TASK_VERSION}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${GRADLE_BINTRAY_PLUGIN_VERSION}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${ANDROID_MAVEN_GRADLE_PLUGIN_VERSION}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

project.ext {
    buildToolsVersion = "${BUILD_TOOLS_VERSION}"
    compileSdkVersion = COMPILE_SDK_VERSION.toInteger()
    minSdkVersion = MIN_SDK_VERSION;
    targetSdkVersion = TARGET_SDK_VERSION;
    preDexLibs = !project.hasProperty('disablePreDex');
}

subprojects {

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    task allclean {
    }

    afterEvaluate { project ->
      allclean.dependsOn(project.tasks.matching {it.name == 'clean'})

        if (project.tasks.matching { it.name == 'assembleRelease'}) {
            def jarList = new ArrayList()
            task setJarList(dependsOn: assembleRelease) << {
                configurations.compile.each {
                    jarList.add(it)
                }
            }

            task copyDeps(dependsOn: setJarList, type: Copy) {
                from jarList
                into 'build/external'
            }
        }
    }

    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

repositories {
}
