apply plugin: 'com.android.library'
apply plugin: 'maven'

project.group = GROUP
version = VERSION_NAME

dependencies {
    compileOnly "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
    compileOnly "com.android.support:support-core-utils:${SUPPORT_LIB_VERSION}"
    compileOnly "com.facebook.infer.annotation:infer-annotation:${INFER_ANNOTATION_VERSION}"
    compileOnly "com.google.code.findbugs:jsr305:${JSR_305_VERSION}"
    compileOnly "javax.annotation:javax.annotation-api:${ANNOTATION_API_VERSION}"

    implementation "com.facebook.soloader:soloader:${SOLOADER_VERSION}"
    implementation "com.parse.bolts:bolts-tasks:${BOLTS_ANDROID_VERSION}"
    implementation project(':fbcore')

    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
    testImplementation("org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}") {
        exclude group: 'org.mockito', module: 'mockito-all'
    }
    testImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation project(path: ':imagepipeline-base-test')
}
apply from: rootProject.file('release.gradle')

android {

    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    sourceSets {
        test {
            resources {
                exclude '**/BUCK'
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task jarTest (type: Jar) {
    from android.sourceSets.test.java.srcDirs
    include '**/*.java'
    classifier = 'test'
}

configurations {
    testOutput.extendsFrom (testImplementation)
}

artifacts.add('archives', sourcesJar)
artifacts.add('testOutput', jarTest)

build.dependsOn jarTest
