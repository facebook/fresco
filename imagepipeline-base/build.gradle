/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import com.facebook.fresco.buildsrc.Deps
import com.facebook.fresco.buildsrc.TestDeps

apply plugin: 'com.android.library'
apply plugin: 'maven'

dependencies {
    compileOnly Deps.AndroidX.androidxAnnotation
    compileOnly Deps.AndroidX.legacySupportCoreUtils
    compileOnly Deps.inferAnnotation
    compileOnly Deps.jsr305
    compileOnly Deps.javaxAnnotation

    implementation Deps.SoLoader.soloaderAnnotation
    implementation Deps.Bolts.tasks
    implementation project(':fbcore')

    testImplementation project(':imagepipeline-base-test')
    testImplementation TestDeps.junit
    testImplementation TestDeps.assertjCore
    testImplementation TestDeps.festAssertCore
    testImplementation TestDeps.mockitoCore
    testImplementation(TestDeps.Powermock.apiMockito) {
        exclude group: 'org.mockito', module: 'mockito-all'
    }
    testImplementation TestDeps.Powermock.moduleJunit4
    testImplementation TestDeps.Powermock.moduleJunit4Rule
    testImplementation TestDeps.Powermock.classloadingXstream
    testImplementation(TestDeps.robolectric) {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}
apply from: rootProject.file('release.gradle')

android {

    buildToolsVersion FrescoConfig.buildToolsVersion
    compileSdkVersion FrescoConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion FrescoConfig.minSdkVersion
        targetSdkVersion FrescoConfig.targetSdkVersion
    }

    sourceSets {
        test {
            resources {
                exclude '**/BUCK'
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task jarTest (type: Jar) {
    from android.sourceSets.test.java.srcDirs
    include '**/*.java'
    classifier = 'test'
}

configurations {
    testOutput.extendsFrom (testImplementation)
}

artifacts.add('archives', sourcesJar)
artifacts.add('testOutput', jarTest)

build.dependsOn jarTest
