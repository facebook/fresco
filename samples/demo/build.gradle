apply plugin: 'com.android.application'

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.facebook.samples.demo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "${VERSION_NAME}"

        testApplicationId "com.facebook.samples.demo.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    productFlavors {
        // TO TEST THE REMOTE MODULES DURING A RELEASE, COMMENT OUT THE "internal" FLAVOR AND
        // UNCOMMENT THE REST OTHERWISE A CLASH OCCURS DUE TO THEM TRYING TO CREATE TASKS OF THE
        // SAME NAME

        internal
//        mavenBasic
//        mavenWithWebp
//        mavenWithAnimatedWebp
//        mavenWithAnimatedGif
//        mavenWithAllAnimations
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../../proguard-fresco.pro'
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a', 'armeabi'
            universalApk false
        }
    }
}

configurations {
    internalCompile
    mavenBasicCompile
    mavenWithWebpCompile
    mavenWithAnimatedWebpCompile
    mavenWithAnimatedGifCompile
    mavenWithAllAnimationsCompile
}

dependencies {
    provided "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"

    internalCompile project(':drawee-backends:drawee-pipeline')
    internalCompile project(':static-webp')
    internalCompile project(':animated-gif')
    internalCompile project(':animated-webp')

    // To get the core Fresco library only without animations or webp support
    mavenBasicCompile "com.facebook.fresco:fresco:${VERSION_NAME}"

    // To get the core Fresco library with webp support
    mavenWithWebpCompile "com.facebook.fresco:fresco:${VERSION_NAME}"
    mavenWithWebpCompile "com.facebook.fresco:webpsupport:${VERSION_NAME}"

    // To get the core Fresco library with webp support, including animated webp
    mavenWithAnimatedWebpCompile "com.facebook.fresco:fresco:${VERSION_NAME}"
    mavenWithAnimatedWebpCompile "com.facebook.fresco:animated-webp:${VERSION_NAME}"
    mavenWithAnimatedWebpCompile "com.facebook.fresco:webpsupport:${VERSION_NAME}"

    // To get the core Fresco library with animated gif support
    mavenWithAnimatedGifCompile "com.facebook.fresco:fresco:${VERSION_NAME}"
    mavenWithAnimatedGifCompile "com.facebook.fresco:animated-gif:${VERSION_NAME}"

    // To get the core Fresco library with webp, animated webp and animated gif support
    mavenWithAllAnimationsCompile "com.facebook.fresco:fresco:${VERSION_NAME}"
    mavenWithAllAnimationsCompile "com.facebook.fresco:animated-gif:${VERSION_NAME}"
    mavenWithAllAnimationsCompile "com.facebook.fresco:animated-webp:${VERSION_NAME}"
    mavenWithAllAnimationsCompile "com.facebook.fresco:webpsupport:${VERSION_NAME}"
}
