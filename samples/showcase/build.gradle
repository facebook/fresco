/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import com.facebook.fresco.buildsrc.Deps
import com.facebook.fresco.buildsrc.SampleDeps
import com.facebook.fresco.buildsrc.TestDeps

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    buildToolsVersion FrescoConfig.buildToolsVersion
    compileSdkVersion FrescoConfig.compileSdkVersion

    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize "1g"
    }

    defaultConfig {
        applicationId "com.facebook.fresco.samples.showcase"
        minSdkVersion FrescoConfig.samplesMinSdkVersion
        targetSdkVersion FrescoConfig.targetSdkVersion
        versionCode 1
        versionName "${VERSION_NAME}"

        testApplicationId "com.facebook.fresco.samples.showcase.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true // needed for tinting
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-showcase.pro'
        }
        debug {
            minifyEnabled false
        }
        instrumentation {
            initWith debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-showcase.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-showcase.pro', 'proguard-test.pro'
            matchingFallbacks = ['debug']
        }
    }

    testBuildType "instrumentation"


    flavorDimensions "main"
    productFlavors {
        normal {
        }
        instantRunConfig {
            dimension "main"
            minSdkVersion FrescoConfig.samplesMinSdkVersion
        }
        internal {
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        abortOnError false
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a'
            universalApk false
        }
    }
}

dependencies {
    compileOnly Deps.jsr305

    implementation SampleDeps.AndroidX.appcompat
    implementation SampleDeps.AndroidX.preference
    implementation SampleDeps.AndroidX.recyclerview
    implementation SampleDeps.AndroidX.cardview

    implementation SampleDeps.Google.material
    implementation Deps.Tools.Stetho.okhttp3

    implementation project(':animated-base')
    implementation project(':animated-gif')
    implementation project(':animated-gif-lite')
    implementation project(':animated-webp')
    implementation project(':static-webp')
    implementation project(':native-filters')
    implementation project(':native-imagetranscoder')

    implementation project(':drawee-backends:drawee-pipeline')
    implementation project(':drawee-span')
    implementation project(':imagepipeline-backends:imagepipeline-okhttp3')
    implementation project(':tools:stetho')
    implementation project(path: ':imagepipeline-backends:imagepipeline-okhttp3')

    implementation 'com.facebook.keyframes:keyframes:1.0'

    implementation project(':ui-common')

    // Litho
    compileOnly Deps.Litho.lithoAnnotations
    implementation Deps.Litho.core
    implementation Deps.Litho.widget

    // Litho Sections
    implementation Deps.Litho.Sections.core
    implementation Deps.Litho.Sections.widget
    compileOnly Deps.Litho.Sections.sectionsAnnotations
    annotationProcessor Deps.Litho.Sections.processor

    // Experimental Fresco Vito
    implementation project(':vito:core')
    implementation project(':vito:ktx')
    implementation project(':vito:litho')
    implementation project(':vito:litho-slideshow')
    implementation project(':vito:options')
    implementation project(':vito:provider')
    implementation project(':vito:source')

    // Only used for the custom SVG decoder
    implementation SampleDeps.Showcase.caverockSvg

    // Testing-only dependencies
    androidTestImplementation TestDeps.AndroidX.espressoCore
    androidTestImplementation TestDeps.AndroidX.testRules
    androidTestImplementation TestDeps.AndroidX.testRunner
    androidTestImplementation TestDeps.junit

    implementation(Deps.Tools.Flipper.flipper)
    implementation(Deps.Tools.Flipper.fresco) {
        exclude group: 'com.facebook.fresco'
    }
    implementation project(':tools:flipper')

    implementation Deps.Kotlin.stdlibJdk

    implementation project(path: ':vito:view')
}
